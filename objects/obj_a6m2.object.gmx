<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_a6m2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_base</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    hp = 6;
    fire_delay = 90;
    attack_mode = obj_a6m2_spawner.attack_mode;
    move_time = 200;
    move_turn_way = 0;
    move_turn_mode = 0;
    move_speed = 4;
    
    angle = 0; 
    lifetime = room_speed * 10 
    image_xscale = 0.8
    image_yscale = 0.8
//    attack_repeat = 0;
//    move_repeat = 0  

  
    if attack_mode = 1                    //상단에서 하단으로 온뒤 위로 턴후 반복
    {
        x = irandom_range(100,800);
        y = view_yview[0] -100;
        if floor( x / 100 ) = 1 {
        angle = 290;
        } else if floor( x / 100 ) = 2 {
        angle = 285;
        } else if floor( x / 100 ) = 3 {
        angle = 280;
        } else if floor( x / 100 ) = 4 {
        angle = 270;
        } else if floor( x / 100 ) = 5 {
        angle = 270;
        } else if floor( x / 100 ) = 6 {
        angle = 260;
        } else if floor( x / 100 ) = 7 {
        angle = 255;
        } else if floor( x / 100 ) = 8 {
        angle = 250;
        }
    } else if attack_mode = 2 {           //하단 에서 상단 으로 온뒤 아래 로 턴후 반복
        x = irandom_range(100,800);
        y = view_yview[0] + 1800;
        
        if floor( x / 100 = 1 ) {
        angle = 110;
        } else if floor( x / 100 ) = 2 {
        angle = 105;
        } else if floor( x / 100 ) = 3 {
        angle = 100;
        } else if floor( x / 100 ) = 4 {
        angle = 90;
        } else if floor( x / 100 ) = 5 {
        angle = 90;
        } else if floor( x / 100 ) = 6 {
        angle = 80;
        } else if floor( x / 100 ) = 7 {
        angle = 75;
        } else if floor( x / 100 ) = 8 {
        angle = 60;
        } 
    }
/*    } else if attack_mode = 3 {        // 왼쪽에서 오른쪽으로 이동뒤 맵밖으로나가면 반대쪽으로 180도 턴후 반복
        x = -100
        y = 300
        angle = 0
    } else if attack_mode = 4 {        // 오른쪽에서 왼쪽으로 이동뒤 맵밖으로나가면 반대쪽으로 180도 턴후 반복
        x = 1000
        y = 300
        angle = 180    
    } else if attack_mode = 5 {        // 왼쪽에서 스폰 오른쪽으로 이동하다 맵안으로 들어오면 아래쪽으로 360도를 2초에 나눠서 돈뒤 1번패턴 반복
    
    } else if attack_mode = 6 {        // 오른쪽에서 스폰 왼쪽으로 이동하다 맵안으로 들어오면 아래쪽으로 360도를 2초에 나눠서 돈뒤 1번패턴 반복 
    */


    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    y -= 2
    if angle &gt;= 360
    {
    angle = 0
    }
    else if angle &lt; 0 {
    angle += 360
    }
        
    if lifetime &lt;= 0 {
    if y &lt; view_yview[0] - 200 instance_destroy ( )
    if y &gt; view_yview[0] + 1800 instance_destroy ( )
    if x &lt; 0 - 200 instance_destroy ( )
    if x &gt; room_width + 200 instance_destroy ( )
    } else lifetime --;
    
    if fire_delay &lt;= 0{
    instance_create( x, y, obj_enemy_bullet );
    fire_delay = 90;
    } else fire_delay --;
    
    if hp &lt;= 0 {
    UI_SYS.var_score += 35
    audio_play_sound(sound_explosion_1,0,0)
    instance_create(x,y,obj_explosion_1)
    instance_destroy();
    }
    
    image_angle = angle + 90;
    
    x += lengthdir_x(move_speed,angle);
    y += lengthdir_y(move_speed,angle);
    
    if attack_mode = 1.5 or attack_mode = 2.5 {
        if move_turn_way = 1 {
        sprite_index = spr_a6m2_turn_right
        } else sprite_index = spr_a6m2_turn_left
    } else if attack_mode = 1 or attack_mode = 2 {
    sprite_index = spr_a6m2
    }
    
    // 패턴
    
    if attack_mode = 1 {                        //상 -&gt; 하
        if y &lt; view_yview[0] + 1200 {
        move_speed = 8;
        vspeed = 0
        } else { 
            move_turn_angle = irandom_range(80,100)
            move_turn_way = choose(0,1)
            angle = floor(angle /10) * 10
            attack_mode = 1.5;
        }
        
/////////////////////////////////////////////////////////////////////////////////     
        
    } else if attack_mode = 1.5 {               //패턴1 -&gt;2 중간
        if !(angle &gt;= move_turn_angle -4 &amp;&amp; angle &lt;= move_turn_angle +4) {
            if move_turn_way = 1 {
                angle +=5;
            }else if move_turn_way = 0{
                angle -=5;
            }
        } else  attack_mode = 2      
        
/////////////////////////////////////////////////////////////////////////////////           
        
    } else if attack_mode = 2 {                 //하 -&gt; 상
        if y &gt; view_yview[0]+300 {
        move_speed = 8;    
        vspeed = 0
        } else {
            move_turn_angle = irandom_range(260,280)
            move_turn_way = choose(0,1)
            angle = floor(angle /10) * 10
            attack_mode = 2.5;
        }
        
/////////////////////////////////////////////////////////////////////////////////           
        
    } else if attack_mode = 2.5 {               //패턴 2-&gt;1 중간 
        if !(angle &gt;= move_turn_angle -4 &amp;&amp; angle &lt;= move_turn_angle +4)  {
            if move_turn_way = 1 {
                angle +=5;
            }else if move_turn_way = 0 {
                angle -=5;
            }
        } else attack_mode = 1
        
/////////////////////////////////////////////////////////////////////////////////           
        
    } else if attack_mode = 3 {                 // 좌 -&gt; 우
    if x &lt; 0 {
        if move_turn_mode = 0 {
            angle += irandom_range(-5,5)
            } else if x &gt; 600 {
            attack_mode = 3.5
            }
        }
        
        
        
        
/////////////////////////////////////////////////////////////////////////////////           
        
    } else if attack_mode = 3.5 {               // 패턴 3-&gt;4 중간
        if !(angle &gt;= move_turn_angle -4 &amp;&amp; angle &lt;= move_turn_angle +4) { 
            if move_turn_way = 1 {
                angle += 5;
            } else if move_turn_way = 0 {
                angle -= 5;
            } 
        } else attack_mode = 4
        
/////////////////////////////////////////////////////////////////////////////////           
        
    } else if attack_mode = 4 {                 // 우 -&gt; 좌
    if x &lt; 1600 {
        if move_turn_mode = 0 {
            angle += irandom_range(175,185)
            } else if x &gt; 300 {
            attack_mode = 3.5
            }
        }
        
/////////////////////////////////////////////////////////////////////////////////           
        
    } else if attack_mode = 4.5 {               // 패턴 4-&gt;3 중간
        if !(angle &gt;= move_turn_angle -4 &amp;&amp; angle &lt;= move_turn_angle +4) {
            if move_turn_way = 1 {
                angle += 5;
            } else if move_turn_way = 0 {
                angle -= 5;
            } 
        } else attack_mode = 4
    }
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
