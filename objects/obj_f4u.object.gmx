<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_f4u</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>obj_player_base</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>   
    image_xscale = 0.8
    image_yscale = 0.8
    //체력
    hp = 10;
    // 이동관련
    bullet_angle = 90;
    move_speed = 10;
    move_angle = 90;
    KeyUp = 0;
    KeyDown = 0;
    KeyLeft = 0;
    KeyRight = 0;
    KeyFire = 0;
    KeyExtraFire = 0;
    
    
    MouseUp = 0;
    MouseLeft = 0;
    MouseDown = 0;
    MouseRight = 0;
    MouseUpLeft = 0;
    MouseUpRight = 0;
    MouseDownLeft = 0;
    MouseDownRight = 0;
    MouseFire = 0;
    MouseExtraFire = 0;

    // 사격 관련
    fire_order = 1;        
    fire_delay = 0;        //기본무장
    fire_power_level = 1;
    fire_power = 0;
    
    
    fire_cannon_delay = 0; //기관포
    
    extra_fire_order = 0;
    extra_fire_delay = 0;  //로켓
    extra_ra = 99;
    
    gun_type = 0


    audio_play_sound ( sound_engine_1 , 1 ,1 )
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    // 이동 제한

    x = clamp( x, 0+sprite_width/2, room_width-sprite_width/2  )
    y = clamp( y, view_yview[0]+95+sprite_height/2, view_yview[0]+1480-sprite_width/2 )
    hp = clamp(hp,0,100)
    
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    y -= 2
    view_yview -= 2    

    
    
    // 키 체크
    
    KeyUp = keyboard_check( ord ( 'W' ) ); 
    KeyLeft = keyboard_check ( ord ( 'A' ) );
    KeyDown = keyboard_check ( ord ( 'S' ) );
    KeyRight = keyboard_check ( ord ( 'D' ) );
    KeyFire = keyboard_check ( ord ( 'J' ) );
    KeyExtraFire = keyboard_check ( ord ( 'K' ) );
    if MouseUp { KeyUp = true }
    if MouseLeft { KeyLeft = true }
    if MouseDown { KeyDown = true }
    if MouseRight { KeyRight = true }
    if MouseUpLeft { KeyUp = true KeyLeft = true }
    if MouseUpRight { KeyUp = true KeyRight = true }
    if MouseDownLeft { KeyDown = true KeyLeft = true }
    if MouseDownRight { KeyDown = true KeyRight = true }
    if MouseFire { KeyFire = true }
    if MouseExtraFire { KeyExtraFire = true }
    
    // 이동 각도 설정 
    
    if KeyUp - KeyDown != 0 {
        if KeyLeft - KeyRight != 0 {
            if KeyUp = true {
                if KeyLeft = true {
                move_angle = 135;           
                } else {                        
                move_angle = 45;     
                }
            } else if KeyLeft = true {
            move_angle = 225;
            } else {                            
            move_angle = 315;
            }
        } else if KeyUp = true {
        move_angle = 90;
        } else {
        move_angle = 270;
        }
    } else if KeyLeft - KeyRight != 0 {
        if KeyLeft = true {
        move_angle = 180;
        } else {
        move_angle = 0;
        }
    } else move_angle = 90;
    
    // 이동 
    
    if ( ( KeyUp - KeyDown ) !=0 ) or ( ( KeyLeft - KeyRight ) != 0 ) {
    x += lengthdir_x ( move_speed, move_angle );
    y += lengthdir_y ( move_speed, move_angle );
    } 
    
    if fire_power &gt;= 11
    {
    fire_power_level ++;
    fire_power = 0;
    }
    
    // 주무장 발사 
    
    if KeyFire = 1 {    
    
    // 기관총 발사 
    
        if gun_type = 0 {
            if fire_delay &lt;= 0 {
                if fire_power_level = 1 {                                     //1단계
                    if fire_order = 1 {
                    instance_create ( x - 24, y - 39, obj_mg2_bullet );
                    audio_play_sound ( sound_mg2 ,0 ,0 );
                    fire_order = 2;
                    fire_delay +=6;
                    } else if fire_order = 2 {
                    instance_create ( x + 25, y - 39, obj_mg2_bullet );
                    audio_play_sound ( sound_mg2 ,0 ,0 );
                    fire_order = 1;         
                    fire_delay +=6;                
                    }
                } else if fire_power_level = 2 {                              //2단계
                if fire_order = 1 {
                    instance_create ( x - 24, y - 39, obj_mg2_bullet );
                    instance_create ( x + 37, y - 39, obj_mg2_bullet );     
                    audio_play_sound ( sound_mg2 ,0 ,0 );
                    fire_order = 2;             
                    fire_delay += 6;       
                } else {
                    instance_create ( x + 25, y - 39, obj_mg2_bullet );              
                    instance_create ( x - 36, y - 39, obj_mg2_bullet );   
                    audio_play_sound ( sound_mg2 ,0 ,0 );
                    fire_order = 1;
                    fire_delay += 6;               
                } } else if fire_power_level = 3 {                            //3단계
                if fire_order = 1 {
                    instance_create ( x - 24, y - 39, obj_mg2_bullet );
                    instance_create ( x + 25, y - 39, obj_mg2_bullet );                              
                    instance_create ( x + 31, y - 39, obj_mg2_bullet );  
                    audio_play_sound ( sound_mg2 ,0 ,0 );
                    fire_order = 2;
                    fire_delay += 6; 
                } else {
                    instance_create ( x - 30, y - 39, obj_mg2_bullet );                   
                    instance_create ( x - 36, y - 39, obj_mg2_bullet );                
                    instance_create ( x + 37, y - 39, obj_mg2_bullet );          
                    audio_play_sound ( sound_mg2 ,0 ,0 );
                    fire_order = 1;
                    fire_delay += 6;   
                } } else if fire_power_level = 4 {                            //4단계
                if fire_order = 1 {
                    instance_create ( x - 24, y - 39, obj_mg2_bullet );
                    instance_create ( x + 25, y - 39, obj_mg2_bullet );                
                    instance_create ( x - 30, y - 39, obj_mg2_bullet );                
                    instance_create ( x + 31, y - 39, obj_mg2_bullet );  
                    audio_play_sound ( sound_mg2 ,0 ,0 );
                    fire_order = 2;
                    fire_delay += 6;
                } else {
                    instance_create ( x - 24, y - 39, obj_mg2_bullet );
                    instance_create ( x + 25, y - 39, obj_mg2_bullet );    
                    instance_create ( x - 36, y - 39, obj_mg2_bullet );                
                    instance_create ( x + 37, y - 39, obj_mg2_bullet );   
                    audio_play_sound ( sound_mg2 ,0 ,0 );
                    fire_order = 1;
                    fire_delay += 6;
                } 
               } } else {
            fire_delay --;
            }
        }
        
    // 기관포 발사 
        
        else if gun_type = 1 {
        
        }        
    } 
    
    // 로켓 발사 
    
    if KeyExtraFire = 1 {
        if extra_ra &gt; 0 {
            if extra_fire_delay &lt;= 0 {
                if extra_fire_order = 0 {
                instance_create( x - 50, y - 39, obj_hvar_rocket );
                audio_play_sound ( sound_rocket ,0 ,0 );
                extra_fire_order = 1
                extra_fire_delay = 20
                extra_ra --;
            } else {
                instance_create( x + 51, y - 39, obj_hvar_rocket );
                audio_play_sound ( sound_rocket ,0 ,0 );
                extra_fire_order = 0
                extra_fire_delay = 20    
                extra_ra --;    
                }
            }
        }
    } else extra_fire_delay --;
    
    // 스프라이트 설정
    
    if KeyFire = 0 {    
        if ( move_angle = 135 or move_angle = 180 or move_angle = 225 ) {
            sprite_index = spr_f4u_turn_left;
            if bullet_angle &lt; 110 {
            bullet_angle += 5;
            } } else if ( move_angle = 0 or move_angle = 45 or move_angle = 315 ) {
            sprite_index = spr_f4u_turn_right;
            if bullet_angle &gt; 70 {
            bullet_angle -= 5;
            } } else {
            sprite_index = spr_f4u;
            if bullet_angle &gt; 90 {
            bullet_angle -= 5;
            } else if bullet_angle &lt; 90 {
            bullet_angle += 5;
            }
        }
    } else if fire_delay &lt;= 0 {
            if ( move_angle = 135 or move_angle = 180 or move_angle = 225 ) {
            sprite_index = spr_f4u_turn_left_firing;
            if bullet_angle &lt; 110 {
            bullet_angle += 5;
            } } else if ( move_angle = 0 or move_angle = 45 or move_angle = 315 ) {
            sprite_index = spr_f4u_turn_right_firing;
            if bullet_angle &gt; 70 {
            bullet_angle -= 5;
            } } else {
            sprite_index = spr_f4u_firing;
            if bullet_angle &gt; 90 {
            bullet_angle -= 5;
            } else if bullet_angle &lt; 90 {
            bullet_angle += 5;
            }
        }
    }
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
